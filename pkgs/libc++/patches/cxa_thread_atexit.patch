--- src/libcxxabi/src/CMakeLists.txt.orig
+++ src/libcxxabi/src/CMakeLists.txt
@@ -36,7 +36,7 @@
   )
 endif()
 
-if (LIBCXXABI_ENABLE_THREADS AND (UNIX OR FUCHSIA) AND NOT (APPLE OR CYGWIN)
+if (LIBCXXABI_ENABLE_THREADS AND (UNIX OR FUCHSIA) AND NOT CYGWIN
     AND NOT (${CMAKE_SYSTEM_NAME} MATCHES "AIX"))
   list(APPEND LIBCXXABI_SOURCES
     cxa_thread_atexit.cpp
--- src/libcxxabi/src/cxa_thread_atexit.cpp.orig
+++ src/libcxxabi/src/cxa_thread_atexit.cpp
@@ -112,8 +112,7 @@
 #ifdef HAVE___CXA_THREAD_ATEXIT_IMPL
     return __cxa_thread_atexit_impl(dtor, obj, dso_symbol);
 #else
-    if (__cxa_thread_atexit_impl) {
-      return __cxa_thread_atexit_impl(dtor, obj, dso_symbol);
+    if (0) {
     } else {
       // Initialize the dtors std::__libcpp_tls_key (uses __cxa_guard_*() for
       // one-time initialization and __cxa_atexit() for destruction)
--- src/libcxxabi/include/cxxabi.h.orig
+++ src/libcxxabi/include/cxxabi.h
@@ -180,7 +180,7 @@
 extern _LIBCXXABI_FUNC_VIS bool __cxa_uncaught_exception() _LIBCXXABI_NOEXCEPT;
 extern _LIBCXXABI_FUNC_VIS unsigned int __cxa_uncaught_exceptions() _LIBCXXABI_NOEXCEPT;
 
-#if defined(__linux__) || defined(__Fuchsia__)
+#if defined(__linux__) || defined(__Fuchsia__) || defined(__APPLE__)
 // Linux and Fuchsia TLS support. Not yet an official part of the Itanium ABI.
 // https://sourceware.org/glibc/wiki/Destructor%20support%20for%20thread_local%20variables
 extern _LIBCXXABI_FUNC_VIS int __cxa_thread_atexit(void (*)(void *), void *,
--- src/libcxxabi/lib/itanium-base.exp.orig
+++ src/libcxxabi/lib/itanium-base.exp
@@ -29,3 +29,4 @@
 ___cxa_terminate_handler
 ___cxa_unexpected_handler
 ___cxa_new_handler
+___cxa_thread_atexit
