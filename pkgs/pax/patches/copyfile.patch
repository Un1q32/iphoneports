--- src/ar_subs.c.orig
+++ src/ar_subs.c
@@ -53,7 +53,9 @@
 #ifdef __APPLE__
 #include <stdlib.h>
 #include <sys/param.h>
+#if __has_include(<copyfile.h>)
 #include <copyfile.h>
+#endif
 #include <libgen.h>
 #include <sys/queue.h>
 #include "options.h"
@@ -252,7 +254,7 @@
 	int fd;
 	time_t now;
 
-#ifdef __APPLE__
+#if defined(__APPLE__) && __has_include(<copyfile.h>)
 	int copyfile_disable = (getenv(COPYFILE_DISABLE_VAR) != NULL);
 	LIST_HEAD(copyfile_list_t, copyfile_list_entry_t) copyfile_list;
 	struct copyfile_list_entry_t {
@@ -456,7 +458,7 @@
 		if (!res)
 			(void)rd_skip(cnt + arcn->pad);
 
-#ifdef __APPLE__
+#if defined(__APPLE__) && __has_include(<copyfile.h>)
 		if (!strncmp(basename(arcn->name), "._", 2)) {
 			cle = alloca(sizeof(struct copyfile_list_entry_t));
 			cle->src = strdup(arcn->name);
@@ -481,7 +483,7 @@
 				    "Can't fchdir to starting directory");
 #endif /* __APPLE__ */
 	}
-#ifdef __APPLE__
+#if defined(__APPLE__) && __has_include(<copyfile.h>)
 	LIST_FOREACH(cle, &copyfile_list, link)
 	{
 		if(copyfile_disable || copyfile(cle->src, cle->dst, NULL,
@@ -589,7 +591,7 @@
 				continue;
 		}
 
-#ifdef __APPLE__
+#if defined(__APPLE__) && __has_include(<copyfile.h>)
 		/*
 		 * synthesize ._ files for each node we encounter 
 		 */
@@ -797,7 +799,7 @@
 		if (((cnt > 0) && (wr_skip(cnt) < 0)) ||
 		    ((arcn->pad > 0) && (wr_skip(arcn->pad) < 0)))
 			break;
-#ifdef __APPLE__
+#if defined(__APPLE__) && __has_include(<copyfile.h>)
 		if (metadata)
 			goto next;
 #endif	/* __APPLE__ */
@@ -1225,7 +1227,7 @@
 				res = node_creat(arcn);
 			if (res < 0)
 				purg_lnk(arcn);
-#ifdef __APPLE__
+#if defined(__APPLE__) && __has_include(<copyfile.h>)
 			if (res >= 0 &&
 			    arcn->type == PAX_DIR &&
 			    copyfile(arcn->org_name, arcn->name, NULL, COPYFILE_ACL | COPYFILE_XATTR) < 0)
@@ -1258,7 +1260,7 @@
 		 * copy source file data to the destination file
 		 */
 		cp_file(arcn, fdsrc, fddest);
-#ifdef __APPLE__
+#if defined(__APPLE__) && __has_include(<copyfile.h>)
 		/* do this before file close so that mtimes are correct regardless */
 		if (getenv(COPYFILE_DISABLE_VAR) == NULL) {
 			if (fcopyfile(fdsrc, fddest, NULL, COPYFILE_ACL | COPYFILE_XATTR) < 0)
