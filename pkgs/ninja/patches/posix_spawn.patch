--- src/src/subprocess-posix.cc.orig
+++ src/src/subprocess-posix.cc
@@ -23,7 +23,11 @@
 #include <stdio.h>
 #include <string.h>
 #include <sys/wait.h>
+#if !((defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1050) || \
+      (defined(__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__ < 20000))
 #include <spawn.h>
+#define USE_POSIX_SPAWN
+#endif
 
 #if defined(USE_PPOLL)
 #include <poll.h>
@@ -72,6 +76,7 @@
     SetCloseOnExec(fd_);
   }
 
+#ifdef USE_POSIX_SPAWN
   posix_spawn_file_actions_t action;
   int err = posix_spawn_file_actions_init(&action);
   if (err != 0)
@@ -141,6 +146,55 @@
   err = posix_spawn_file_actions_destroy(&action);
   if (err != 0)
     Fatal("posix_spawn_file_actions_destroy: %s", strerror(err));
+#else
+  pid_t pid = fork();
+  if (pid < 0) {
+    perror("fork");
+    exit(1);
+  } else if (pid == 0) {
+    // child
+    if (!use_console_) {
+      close(fd_);
+      int fd = open("/dev/null", O_RDONLY);
+      if (fd < 0) {
+        perror("open");
+        _exit(127);
+      }
+      if (fd != 0) {
+        if (dup2(fd, 0) < 0) {
+          perror("dup2");
+          _exit(127);
+        }
+        close(fd);
+      }
+    }
+    if (dup2(subproc_stdout_fd, 1) < 0) {
+      perror("dup2");
+      _exit(127);
+    }
+    if (dup2(subproc_stdout_fd, 2) < 0) {
+      perror("dup2");
+      _exit(127);
+    }
+    close(subproc_stdout_fd);
+
+    if (setpgid(0, 0) < 0) {
+      perror("setpgid");
+      _exit(127);
+    }
+
+    if (sigprocmask(SIG_SETMASK, &set->old_mask_, NULL) < 0) {
+      perror("sigprocmask");
+      _exit(127);
+    }
+
+    const char* spawned_args[] = { "/bin/sh", "-c", command.c_str(), NULL };
+    execv("/bin/sh", const_cast<char**>(spawned_args));
+    perror("execv");
+    _exit(127);
+  }
+  pid_ = pid;
+#endif
 
   if (!use_console_)
     close(subproc_stdout_fd);
